services:
  nginx-proxy:
    image: nginx:1.23.1-alpine
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - conf:/etc/nginx/conf.d
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html

  nginx-proxy-gen:
    image: nginxproxy/docker-gen
    container_name: nginx-proxy-gen
    command:
      -notify-sighup nginx-proxy -only-exposed -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl
      /etc/nginx/conf.d/default.conf
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    restart: always
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy-gen
    volumes_from:
      - nginx-proxy
    volumes:
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock

  geth:
    image: ethereum/client-go
    container_name: geth
    command:
      [
        '--syncmode=light',
        '--rpc.evmtimeout=60s',
        '--http',
        '--ws',
        '--http.corsdomain=*',
        '--ws.origins=*',
        '--http.addr=0.0.0.0',
        '--ws.addr=0.0.0.0',
        '--http.vhosts=*',
      ]
    env_file: .geth.env
    restart: always
    volumes:
      - /root/.ethereum:/root/.ethereum

volumes:
  conf:
  vhost:
  html:
  certs:
  acme:
